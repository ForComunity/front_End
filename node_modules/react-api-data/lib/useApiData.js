"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var react_redux_1 = require("react-redux");
var createApiDataBinding_1 = require("./helpers/createApiDataBinding");
var withApiData_1 = require("./withApiData");
// the hook should call perform when shouldAutoTrigger and:
// - the component gets mounted
// - the params have changed
// - the endpoint has changed
// - the call has been invalidated (networkStatus is ready)
var useApiData = function (endpointKey, params, instanceId) {
    if (instanceId === void 0) { instanceId = ''; }
    var bindingsStore = react_1.useRef(new createApiDataBinding_1.BindingsStore());
    var prevParams = react_1.useRef();
    var prevEndpointKey = react_1.useRef();
    var apiData = react_redux_1.useSelector(function (state) {
        return state.apiData;
    });
    var autoTrigger = withApiData_1.shouldAutoTrigger(apiData, endpointKey);
    var dispatch = react_redux_1.useDispatch();
    var binding = bindingsStore.current.getBinding(endpointKey, params, dispatch, instanceId, apiData);
    var networkStatus = binding.request.networkStatus;
    react_1.useEffect(function () {
        if (autoTrigger &&
            (prevParams.current !== params || prevEndpointKey.current !== endpointKey || networkStatus === 'ready')) {
            prevParams.current = params;
            prevEndpointKey.current = endpointKey;
            binding.perform(params);
        }
    }, [autoTrigger, params, endpointKey, networkStatus]);
    return binding;
};
exports.default = useApiData;
//# sourceMappingURL=useApiData.js.map